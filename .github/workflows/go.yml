# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on: [push, workflow_dispatch]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: forum
        ports:
          - 5432:5432
    steps:
    - name: download code
      uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.16.7'
    - name: Debug
      run: |
        pwd
        export GOPATH=/home/runner/work
        go env

    - name: ls
      run: |
        ls -a
        cat test.env
    - name: Test
      run: go test -v ./...
      env:
        DBURL: postgres://postgres:postgres@localhost:5432/forum

  build:
    needs: test
    environment: staging
    runs-on: ubuntu-latest
    steps:
      - name: download code
        uses: actions/checkout@v3
      - name: connect to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME}}
          password: ${{ secrets.DOCKER_TOKEN}}
      - name: docker build
        uses: docker/setup-buildx-action@v2
      - name: build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME}}/test-project

  deployment:
    needs: build
    environment: staging
    runs-on: ubuntu-latest
    steps:
      - name: deploying to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER}}
          username: ${{ secrets.SERVER_USERNAME}}
          port: ${{ secrets.SERVER_PORT}}
          key: ${{ secrets.SERVER_KEY}}
          script: |
            whoami
            docker compose down
            docker pull ${{ vars.IMAGE_NAME}}
            docker compose up -d
